import Head from 'next/head';
import { gql } from 'graphql-request';

import graphQLClient from '../graphql-client';

import Layout from '../src/components/Layout';
import { Box, Divider, Paper, Typography } from '@mui/material';
import Project from '../src/components/Project';

export default function Projects({ allProjects }) {
    console.log('All Projects', allProjects);
    return (
        <>
            <Head>
                <title>Projects | Aimee Tacchi</title>
                <meta name="description" content="Aimee Tacchi Portfolio Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Layout>
                <Paper sx={{height: '100vh'}}>
                    <Box sx={{ marginLeft: '89px' }}>
                        <Typography mt={2} mb={2} variant="h2">Projects</Typography>
                        <Divider />
                    </Box>
                    <Box mt={4} sx={{ display: 'flex', gap: 3, flexWrap: 'wrap', marginLeft: '89px' }}>
                        {allProjects.map(project => (
                            <Project key={project.id} project={project} />
                        ))}
                    </Box>
                </Paper>
            </Layout>
        </>
    );
}

const query = gql`
    query {
        allProjects {
            id
            name
            slug
            description
            excerpt
            link
            tech
            recentWork
            coverImage {
                id
                responsiveImage(imgixParams: { fit: crop, w: 300, h: 300, auto: format }) {
                    srcSet
                    webpSrcSet
                    sizes
                    src
                    width
                    height
                    aspectRatio
                    alt
                    title
                    base64
                }
            }
        }
    }
`;

export async function getServerSideProps() {

    const allProjects = await graphQLClient.request(query);

    return {
        props: allProjects,
    };
}
